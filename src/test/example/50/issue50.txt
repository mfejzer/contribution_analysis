The slider presently (on my set-input branch) can only have its value changed; the min/max/step and other settings can't be changed.This code works if you run it in the console for the original jslider at http://egorkhmelev.github.io/jslider/ :```js$el = $('#SliderSingle')$el.removeData('jslider');$el.parent().find('span.jslider').remove();$el.slider({ value:10, from: 5, to: 40, step: 2.5, round: 1, skin: "plastic" });```After the running this code, the slider still works -- moving the pointer updates the `value` for the input DOM element.For our version of jslider, we don't want to pass in all the settings to `$el.slider()`. Instead we want to set the data values on the input element. For example, for the app at http://glimmer.rstudio.com/winstontest/setinput/ , we would want to do something like this:```$el = $('#in_controller')$el.removeData('jslider');$el.attr('data-from', 5)$el.attr('data-to', 40)$el.attr('data-step', 2.5)$el.attr('data-skin', 'plastic')$el.attr('data-round', 1)$el.parent().find('span.jslider').remove();$el.slider({ })```However, this creates three visible sliders, with different pointer values, and in the JS console it throws `TypeError: Cannot call method 'toString' of undefined`. None of the pointers seem to trigger the proper change events when they're moved.
