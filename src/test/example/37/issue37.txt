I haven't managed to create a simple test case for this yet, but it happens in my production app.I have a tabsetPanel which is generated on the fly.  It's tab contents are also htmlOutputs and may contain further htmlOutputs.When I re-generate the tabsetPanel, 1st or 2nd child htmlOutputs that have already been rendered fail because they are visited twice during rebinding.This failure aborts the whole rebinding, which fails to connect the tabsetpanel itself to the input, which breaks my application.I can see this recursion happening using the JS debugger:![screen shot 2013-06-25 at 3 18 17 pm](https://f.cloud.github.com/assets/2532344/707551/e4be9d86-de20-11e2-8b8e-ccaad0baa7b4.png)from my google groups post:When rebinding outputs, ALL outputs from the scope are considered, even if nested in other htmloutputs.Bindoutput does this test:      if (this.$values[id] !== undefined)        binding.onValueChange(this.$values[id]);Which means child htmloutputs of the current binding are bound _now_, even though they are still in the queue for binding from the original call.When the original call considers them, they already appear to be bound, which causes a fault, and stops consideration of further bindings, and does not send the updated inputs back to the server.
